ggplot(data=L)+
geom_point(aes(x=MP,y=v,fill=L),size=4,shape=2,fill=TRUE )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,fill=L),size=4,shape=5,fill=TRUE )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,fill=L),size=4,shape=5 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=4,shape=5 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=1,shape=5 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=3,shape=1 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=3,shape=0 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=3 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L),size=4 )
#anzal Zugsdurchfahrten, nur P Züghe
nZ=10
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T),each=6)+rep(rnorm(nZ,0,5),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=FHZ),size=4 )
nZ=10
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T),each=6)+rep(rnorm(nZ,0,5),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=FHZ),size=4 )
View(L)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.integer(FHZ)),size=4 )
as.integer(FHZ)
as.integer(L$FHZ)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(L$FHZ)),size=4 )
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(FHZ)),size=4 )
nZ=6
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T),each=6)+rep(rnorm(nZ,0,5),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(FHZ)),size=4 )
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(FHZ)),size=4 )
View(L)
nZ=6
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=6)+
rep(rnorm(nZ,0,5),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(FHZ)),size=4 )
nZ=6
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=6)+
rep(rnorm(nZ,0,2),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=L,shape=as.factor(FHZ)),size=4 )
nZ=100
#funktion um lÃ¤rm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=6)+
rep(rnorm(nZ,0,2),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
L$MP1=L$MP
levels(L$MP1)=c("B","B","B","R","R","R")
####################################
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
#difference data frame
library(plyr)
mean=ddply(DL2,.(FHZ),summarize,DL=mean(DL),v=mv[1])
ggplot(data=DL2)+
geom_boxplot(aes(x=as.factor(FHZ),y=DL),alpha=0.3)+
geom_point(aes(x=as.factor(FHZ),y=DL, colour=sqrt((Dv/mv)^2)),size=3)
geom_boxplot(aes(x,y=DL),alpha=0.3)
ggplot(data=L)+
geom_point(aes(x=v,y=L,colour=as.factor(FHZ),
shape=MP1),size=4 )
Mod_S <- lm(L~  1 + log10(v) + MP , data = L)
#SummaRY dei vari modelli
print(summary(Mod_S))
anova(Mod_S)
# 3D Scatterplot with Coloring and Vertical Lines
# and Regression Plane
library(scatterplot3d)
scatterplot3d(L$v,L$MP,L$L, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot",angle=70)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
library(plyr)
mean=ddply(DL2,.(FHZ),summarize,DL=mean(DL),v=mv[1])
ggplot(data=DL2)+
geom_boxplot(aes(x=as.factor(FHZ),y=DL),alpha=0.3)+
geom_point(aes(x=as.factor(FHZ),y=DL, colour=sqrt((Dv/mv)^2)),size=3)
nZ=10
#funktion um lÃ¤rm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,3,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), 0.2) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","R3","G1","G2","G3"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=6)+
rep(rnorm(nZ,0,2),each=6)*rep(c(1,0),each=3,times=nZ),
FHZ_t=rep("P",times=nZ*6),
TR=rep(NA,times=nZ*6),
SB=rep(c(FALSE,TRUE),each=3,times=nZ)
)
L$L=mapply(L_semi,L$v,L$SB)
L$MP1=L$MP
levels(L$MP1)=c("B","B","B","R","R","R")
####################################
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
#difference data frame
library(plyr)
mean=ddply(DL2,.(FHZ),summarize,DL=mean(DL),v=mv[1])
ggplot(data=DL2)+
geom_boxplot(aes(x=as.factor(FHZ),y=DL),alpha=0.3)+
geom_point(aes(x=as.factor(FHZ),y=DL, colour=sqrt((Dv/mv)^2)),size=3)
geom_boxplot(aes(x,y=DL),alpha=0.3)
ggplot(data=L)+
geom_point(aes(x=v,y=L,colour=as.factor(FHZ),
shape=MP1),size=4 )
Mod_S <- lm(L~  1 + log10(v) + MP , data = L)
#SummaRY dei vari modelli
print(summary(Mod_S))
anova(Mod_S)
# 3D Scatterplot with Coloring and Vertical Lines
# and Regression Plane
library(scatterplot3d)
scatterplot3d(L$v,L$MP,L$L, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot",angle=70)
Mod_S <- lm(L~  1 + log10(v) + MP , data = L)
#SummaRY dei vari modelli
print(summary(Mod_S))
anova(Mod_S)
View(L)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
#difference data frame
library(plyr)
mean=ddply(DL2,.(FHZ),summarize,DL=mean(DL),v=mv[1])
ggplot(data=DL2)+
geom_boxplot(aes(x=as.factor(FHZ),y=DL),alpha=0.3)+
geom_point(aes(x=as.factor(FHZ),y=DL, colour=sqrt((Dv/mv)^2)),size=3)
ggplot(data=L)+
geom_point(aes(x=v,y=L,colour=as.factor(FHZ),
shape=MP1),size=4 )
print(summary(Mod_S))
anova(Mod_S)
nZ=10
nZ=10
sdv=5
DG=3
msd=0.25
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,DG,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), msd) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","G1","G2"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=4)+
rep(rnorm(nZ,0,sdv),each=4)*rep(c(1,0),each=2,times=nZ),
FHZ_t=rep("P",times=nZ*4),
TR=rep(NA,times=nZ*4),
SB=rep(c(FALSE,TRUE),each=2,times=nZ)
)
L=data.frame(FHZ=rep(1:nZ,each=6),
MP=rep(c("R1","R2","G1","G2"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=4)+
rep(rnorm(nZ,0,sdv),each=4)*rep(c(1,0),each=2,times=nZ),
FHZ_t=rep("P",times=nZ*4),
TR=rep(NA,times=nZ*4),
SB=rep(c(FALSE,TRUE),each=2,times=nZ)
)
L=data.frame(FHZ=rep(1:nZ,each=4),
MP=rep(c("R1","R2","G1","G2"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=4)+
rep(rnorm(nZ,0,sdv),each=4)*rep(c(1,0),each=2,times=nZ),
FHZ_t=rep("P",times=nZ*4),
TR=rep(NA,times=nZ*4),
SB=rep(c(FALSE,TRUE),each=2,times=nZ)
)
#dataframe
L$L=mapply(L_semi,L$v,L$SB)
L$MP1=L$MP
levels(L$MP1)=c("B","B","R","R")
View(L)
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
nZ=10
sdv=5
DG=3
msd=0.25
#funktion um lärm Zu generieren
L_semi=function(v,GL=TRUE){
eff=0
if(GL){eff= rnorm(1,DG,0.5)}
return( rnorm(1,6.8 + 16.8*log10(v), msd) + eff)
}
#dataframe
L=data.frame(FHZ=rep(1:nZ,each=4),
MP=rep(c("R1","R2","G1","G2"),times=nZ),
v=rep(sample(80:120,nZ,replace=T)+rnorm(nZ,0,0.5),each=4)+
rep(rnorm(nZ,0,sdv),each=4)*rep(c(1,0),each=2,times=nZ),
FHZ_t=rep("P",times=nZ*4),
TR=rep(NA,times=nZ*4),
SB=rep(c(FALSE,TRUE),each=2,times=nZ)
)
#dataframe
L$L=mapply(L_semi,L$v,L$SB)
L$MP1=L$MP
levels(L$MP1)=c("B","B","R","R")
####################################
library(ggplot2)
ggplot(data=L)+
geom_point(aes(x=MP,y=v,colour=as.factor(FHZ)),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
#difference data frame
library(plyr)
mean=ddply(DL2,.(FHZ),summarize,DL=mean(DL),v=mv[1])
ggplot(data=DL2)+
geom_boxplot(aes(x=as.factor(FHZ),y=DL),alpha=0.3)+
geom_point(aes(x=as.factor(FHZ),y=DL, colour=sqrt((Dv/mv)^2)),size=3)
ggplot(data=L)+
geom_point(aes(x=v,y=L,colour=as.factor(FHZ),
shape=MP1),size=4 )
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
DL2$D=interaction(DL2$RP,DL2$GP)
DL2$mv= (DL2$vR+DL2$vG)/2
DL2$Dv= DL2$vR-DL2$vG
DL2$DL= DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
DL2 = merge(x=rename(subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="R","v"="vR","MP"="RP")),
y=rename(subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB)),c("L"="G","v"="vG","MP"= "GP")),
by="FHZ"
)
x=subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB))
names(x)=c("L"="R","v"="vR","MP"="RP")
View(x)
x=subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB))
View(x)
names(x)=c("L"="R","v"="vR","MP"="RP")
View(x)
names(x)
x=subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB))
names(x)
x=subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB))
names(x)=c("FHZ","RP","vR","R")
y=subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB))
names(y)=c("FHZ","GP","vG","G")
##Difference Data Frame
DL2 = merge(x,y,by="FHZ")
x=subset(L, MP1=="R",select=c(-MP1,-FHZ_t,-TR,-SB))
names(x)=c("FHZ","RP","vR","R")
y=subset(L, MP1=="B",select=c(-MP1,-FHZ_t,-TR,-SB))
names(y)=c("FHZ","GP","vG","G")
DL2 = merge(x,y,by="FHZ")
rm(x)
rm(y)
DL2$D  = interaction(DL2$RP,DL2$GP)
DL2$mv = (DL2$vR+DL2$vG)/2
DL2$Dv = DL2$vR-DL2$vG
DL2$DL = DL2$R-DL2$G
DL2=subset(DL2, select=c(-RP,-GP,-G,-R,-vR,-vG))
install.packages("arm")
install.packages("reshape")
library(reshape)
install.packages("LearnBayes")
library(LearnBayes)
demo()
demo(Chapter.1.2)
demo(Chapter.1.2)
demo(Chapter.1.3)
demo(Chapter.2.3)
demo(Chapter.2.4)
knitr
install.packages("knitr")
install.packages("stringr")
library("xtable", lib.loc="C:/Program Files/R/R-3.0.2/library")
remove.packages("xtable")
install.packages("xtable")
install.packages(c("Cairo", "colorspace", "dichromat", "digest", "foreach", "foreign", "labeling", "lattice", "latticeExtra", "Matrix", "mgcv", "munsell", "nlme", "proto", "rpart", "signal"))
library("plyr", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:plyr", unload=TRUE)
remove.packages("plyr")
install.packages("plyr")
library("plyr", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:plyr", unload=TRUE)
install.packages("ggplot2")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
remove.packages("gtable")
install.packages("gtable")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages("reshape2")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages("scales")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
library("RColorBrewer", lib.loc="C:/Program Files/R/R-3.0.2/library")
remove.packages("RColorBrewer")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages("RColorBrewer")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.2/library")
install.packages("reshape")
install.packages("melt")
install.packages("melt")
install.packages("framed")
Pi=seq(0,1,0.01)
fix(Pi)
plot(Pi,Pi/(1-Pi))
plot(Pi,Pi/(1-Pi),"l")
plot(Pi,log(Pi/(1-Pi)),"l")
plot(Pi,Pi/(1-Pi),"l")+hline(1)
plot(Pi,Pi/(1-Pi),"l")+line(1)
data.frame(x=Pi,y1=(Pi/(1-Pi),y2=log(Pi/(1-Pi))
logitz=data.frame(x=Pi,y1=(Pi/(1-Pi),y2=log(Pi/(1-Pi))
logitz=data.frame(x=Pi,y1=(Pi/(1-Pi),y2=log(Pi/(1-Pi)))
rm(list = ls(all = TRUE))
library(plyr)
library(reshape)
library(ggplot2)
Pi=seq(0,1,0.01)
logitz=data.frame(x=Pi,y1=(Pi/(1-Pi),y2=log(Pi/(1-Pi)))
logitz=data.frame(x=Pi,y1=Pi/(1-Pi),y2=log(Pi/(1-Pi)))
ggplot(logitz)+geom_line(aes(x,y))
ggplot(logitz)+geom_line(aes(x,y1))
ggplot(logitz)+geom_line(aes(x,y1))+geom_line(aes(x,y2))
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(1)
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(aes(1))
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(aes(y=1))
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(aes(y=10))
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(y=10)
ggplot(logitz)+geom_line(aes(x,y1))+geom_hline(y=1)
ggplot(logitz)+geom_line(aes(x,y2))+geom_hline(y=o)
ggplot(logitz)+geom_line(aes(x,y2))+geom_hline(y=0)
file.edit('~/.Renviron')
install.packages("ggplot2")
measurement_info <- read.csv("C:/LucMiaz/KG_dev_branch/KG/Measurements_example/MBBMZugExample/measurement_info.csv", sep=";", comment.char="#")
View(measurement_info)
library('jsonlite')
json_file<- 'C:\lucmiaz\JSON\data.json'
json_file<- 'C:/lucmiaz/JSON/data.json'
data <- fromJSON(json_file)
data
data$employees
data$employees$firstName
library(ggplot2)
casejson <- read.csv("C:/LucMiaz/JSON/casejson.json", header=FALSE)
View(casejson)
library(jsonlite)
fromJSON('c:\lucmiaz\kg_dev_branch\KG\Measurements_example\MBBMZugExample')
fromJSON('c:/lucmiaz/kg_dev_branch/KG/Measurements_example/MBBMZugExample')
setwd("~/")
setwd('c:\lucmiaz\kg_dev_branch\KG\Measurements_example\MBBMZugExample')
setwd('c:/lucmiaz/kg_dev_branch/KG/Measurements_example/MBBMZugExample')
fromJSON('test_ZischenDetetkt2_0.02s_3000Hz_4dB_14-10-2015_16-10-48.json')
fromJSON('test_ZischenDetetkt2_0.02s_3000Hz_4dB_14-10-2015_16-10-48')
fromJSON({"Description": "\n                    This file contains the Results of algorithm tests on cases", "date": "14-10-2015", "time": "16:10:48", "algorithm": {"noiseType": "Z", "param": {"threshold": 4, "dt": 0.02, "fmin": 100, "fc": 3000, "overlap": 6, "fmax": 15000}, "class": "ZischenDetetkt2", "description": "implement the Algorithm:\n        1: stft -> X(k,i)\n        2: calculate power per bands for every t_i\n        3: build band power ratio (BPR) \n        4: smooth BPR with simple moving average\n        5: compare  log10(1+BPR) to threshold for every t_i\n        "}, "rates": {"esr": {"TPR": 0.13, "TNR": 0.9026162790697675}, "TPR": 0.13, "TNR": 0.9026162790697675}, "case_tests": {"case_m_0100_7_esr": {"FP": 1, "FN": 87, "TPR": 0.13, "TN": 187, "mic": 7, "mID": "m_0100", "TNR": 0.9946808510638298, "author": "esr", "quality": "medium", "TP": 13, "location": "Zug", "measurement": "Vormessung"}, "case_m_0101_1_esr": {"FP": 66, "FN": 0, "TPR": null, "TN": 434, "mic": "1", "mID": "m_0101", "TNR": 0.868, "author": "esr", "quality": null, "TP": 0, "location": "Zug", "measurement": "Vormessung"}}})
fromJSON({"date": "14-10-2015", "time": "16:10:48", "algorithm": {"noiseType": "Z", "param": {"threshold": 4, "dt": 0.02, "fmin": 100, "fc": 3000, "overlap": 6, "fmax": 15000}, "class": "ZischenDetetkt2", "description": "implement the Algorithm:\n        1: stft -> X(k,i)\n        2: calculate power per bands for every t_i\n        3: build band power ratio (BPR) \n        4: smooth BPR with simple moving average\n        5: compare  log10(1+BPR) to threshold for every t_i\n        "}, "rates": {"esr": {"TPR": 0.13, "TNR": 0.9026162790697675}, "TPR": 0.13, "TNR": 0.9026162790697675}, "case_tests": {"case_m_0100_7_esr": {"FP": 1, "FN": 87, "TPR": 0.13, "TN": 187, "mic": 7, "mID": "m_0100", "TNR": 0.9946808510638298, "author": "esr", "quality": "medium", "TP": 13, "location": "Zug", "measurement": "Vormessung"}, "case_m_0101_1_esr": {"FP": 66, "FN": 0, "TPR": null, "TN": 434, "mic": "1", "mID": "m_0101", "TNR": 0.868, "author": "esr", "quality": null, "TP": 0, "location": "Zug", "measurement": "Vormessung"}}})
setwd("C:/LucMiaz/KG_dev_branch/KG/Measurements_example/MBBMZugExample/results")
fromJSON("test_ZischenDetetk2_0.02_3000Hz_4dB_14-10-2015_16-10-48.json", flatten=TRUE)
fromJSON("ZD2_3000hz.json", flatten=TRUE)
results <-fromJSON("ZD2_3000hz.json", flatten=TRUE)
results$rates
results$algorithm
results$rates
results$case_tests
results$case_tests$case_m_0100_7_esr$mID
results$case_tests$case_m_0100_7_esr$FN
results$rates
