#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
---
output: pdf_document
---
\usepackage{import}
\subimport*{}{packages/Bericht_Hoch.tex}
\subimport*{}{packages/colors.tex}
%% for inline R code: if the inline code is not correctly parsed, you will see a message
\newcommand{\rinline}[1]{SOMETHING WRONG WITH knitr}
%% begin.rcode setup, include=FALSE
% library(knitr)
% opts_chunk$set(fig.path='figure/latex-', cache.path='cache/latex-')
%% end.rcode
\newcommand{\rcode}[1]{\texttt{#1}}
\end_preamble
\use_default_options false
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Analysis of rail lubrification
\end_layout

\begin_layout Subsection
Reproducing the calculations
\end_layout

\begin_layout Standard
The following calculations are done by calling data stored in a neo4j graph
 database from R.
 To insert data in this database, first use 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rcode{
\end_layout

\end_inset

mainanalysis.py
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 to generate a serie of json file containing all the useful info on your
 new data.
 Then use the code 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
rcode{
\end_layout

\end_inset

toDB.py
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 to import these data in the neo4j database -- before running the script,
 please read the head lines and make the necessary changes described there.
\end_layout

\begin_layout Standard
In R, the database is called as follows -- don't forget to launch the neo4j
 interface and start the local server if necessary :
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%% begin.rcode
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%library(RNeo4j)#call RNeo4j package
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%graph=startGraph('http://localhost:7474/db/data', username='neo4j', %password='
admin')#open a port to the db, 
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%#with username 'neo4j' and password 'admin'
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%% end.rcode
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Structure of the database
\end_layout

\begin_layout Standard
The databases in Neo4j are graphs, containing nodes and relationships between
 these nodes.
 Nodes and relationships have types (or labels).
 This will differentiate between Passings and Algorithms, in the case of
 Nodes, and between the relation of seeing (Passing saw this type of train)
 and the relation of taking place there (Passing took place here).
\end_layout

\begin_layout Standard
We have structured our database - as depicted on figure -- to contain the
 following Node Types -- Properties names are in 
\shape italic
italic
\shape default
:
\end_layout

\begin_layout Itemize

\series bold
Algorithms
\series default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Name
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
class
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
dt
\shape default
 for delta time used in discretisation 
\end_layout

\begin_layout Itemize

\shape italic
ovelap
\shape default
 used in the STFT 
\end_layout

\begin_layout Itemize

\shape italic
fmin
\shape default
 lower bound for low band 
\end_layout

\begin_layout Itemize

\shape italic
fmax
\shape default
 upper bound for high band 
\end_layout

\begin_layout Itemize

\shape italic
fc
\shape default
 threshold between low and high bands 
\end_layout

\begin_layout Itemize

\shape italic
noiseType
\shape default
 (detected by the algorithm) 
\end_layout

\begin_layout Itemize

\shape italic
threshold
\shape default
 applied to low/high band ratio 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Passings
\series default
 (i.e.
 measurement characteristics of one train passage) 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Name
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Measurement
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Temperature
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Humidity
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
direction
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
rain
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Wind
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
axleProLength
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Location
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
v1
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
v2
\shape default
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
MicMes
\series default
 (i.e.
 the measurements values recorded by one microphone at one passing) 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Name
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
micN
\shape default
 number of this microphone 
\end_layout

\begin_layout Itemize

\shape italic
dt
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Tb
\shape default
 start time 
\end_layout

\begin_layout Itemize

\shape italic
Te
\shape default
 end time 
\end_layout

\begin_layout Itemize

\shape italic
Tpb
\shape default
 start time masked 
\end_layout

\begin_layout Itemize

\shape italic
Tpe
\shape default
 end time masked 
\end_layout

\begin_layout Itemize

\shape italic
tNoise
\shape default
 Period in s.
 where noise was detected 
\end_layout

\begin_layout Itemize

\shape italic
tNoisemasked
\shape default
 Period in s.
 where noise was detected (masked between Tp b and Tpe) 
\end_layout

\begin_layout Itemize

\shape italic
TEL
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Location
\shape default
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
TrainType
\series default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Name
\shape default
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Location
\series default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Name
\shape default
 
\end_layout

\begin_layout Standard
It contains the following Relationships -- the example is the canonical
 use of the relationship : 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
IN
\series default
 (a Passing took place IN a Location) 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Time
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Date
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Track
\shape default
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
SAW
\series default
 (a Passing SAW a TrainType) 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
Time
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Date
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
TrainLength
\shape default
 
\end_layout

\begin_layout Itemize

\shape italic
Track
\shape default
 
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
ISANEVALOF
\series default
 (a MicMes is an evaluation of a Passing) 
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
tEvalmasked total length of the masked recording 
\end_layout

\begin_layout Itemize

\shape italic
tEval total length of the recording
\end_layout

\begin_layout Itemize

\series bold
WASEVALWITH
\series default
\shape italic
 (a MicMes was evaluated with an Algorithm) 
\end_layout

\begin_layout Itemize

\series bold
NEAR
\series default
\shape italic
 (two Locations are NEAR, e.g.
 Biel and Biel2)
\end_layout

\begin_deeper
\begin_layout Standard

\shape italic
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\shape italic
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Graphics
	filename img/graph.pdf
	width 100text%

\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "graphneo4j"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Illustration of the nodes and relationships types in the Neo4j database.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Getting started in R
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
We will import the measurements for all the algorithms.
 RNeo4j accepts 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rcode{
\end_layout

\end_inset

data.frames
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 as input, so we will give it that.
 In the following R-code, we will call all evaluations made with the algorithms
 in the database, all Passings attached to those evaluations and all trains
 types of those Passings.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard

\shape italic
\begin_inset ERT
status open

\begin_layout Plain Layout

%% begin.rcode
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%query='
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%MATCH (a:Algorithm)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains
 the %specific lengths of time (masked and not) of the microphone signal
 (c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%MATCH (t)<-[r:SAW]-(b)//the relationship r contains info in the train of
 this Passing (lenght and track)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%RETURN a.Name, c.tNoisemasked, c.tNoise, s.tEval, s.tEvalmasked, t.Name, %r.trainLengt
h, r.Track
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%'
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%% end.rcode
\end_layout

\end_inset


\end_layout

\end_body
\end_document
