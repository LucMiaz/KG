tf
tf$1
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
tf
View(tf)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
json_file='C:/lucmiaz/Algorithm_Report/Datamaousdict.json'
tfd<-fromJSON(json_file)
View(tfd)
remove(tfd)
remove(json_file)
max(tf$spec)
min(tf$spec)
mean(tf$spec)
??kmeans
library(stats)
kmeans(tf$spec)
kmeans(tf$spec, 10)
clusters<-kmeans(tf$spec, 10)
clusters$cluster
The databases in Neo4j are graphs, containing nodes and relationships between these nodes. Nodes and relationships have types (or labels). This will differentiate between Passings and Algorithms, in the case of Nodes, and between the relation of seeing (Passing saw this type of train) and the relation of taking place there (Passing took place here).
library(RNeo4j)#call RNeo4j package
install.packages('RNeo4j')
install.packages(pandoc)
install.packages('pandoc')
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info in the train of this Passing (lenght and track)
RETURN a.Name, c.tNoisemasked, c.tNoise, s.tEval, s.tEvalmasked, t.Name, r.trainLength, r.Track
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
library(RNeo4j)#call RNeo4j package
graph=startGraph('http://localhost:7474/db/data', username='neo4j', password='admin')#open a port to the db, with username 'neo4j' and password 'admin'
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info in the train of this Passing (lenght and track)
RETURN a.Name, c.tNoisemasked, c.tNoise, s.tEval, s.tEvalmasked, t.Name, r.trainLength, r.Track
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
View(q)
options.names
options
options
options.base
options$fig
options$get
??options
devtools::install_github('lucmiaz/knitr', build_vignettes = TRUE)
install.packages(devtools)
install.packages('devtools')
devtools::install_github('lucmiaz/knitr', build_vignettes = TRUE)
install.packages('knitr')
install.packages("knitr")
install.packages("stringi")
a<-20
if (a){print(TRUE)}
if (a){print(TRUE)}else{print(FALSE)}
dummyf<- function(a){if (a){print(TRUE)}else{print(FALSE)}}
dummyf(a)
dummyf()
dummyf(b)
dummyf(options)
a=data.frame('d'=3)
a
dummyf(a)
dummyf(a$d)
dummyf(a$e)
a.empty()
a$d.empty()
is.null(a)
is.null(a$d)
is.null(a$e)
if (!is.null(options$source.cap)){
if (!is.null(options$source.lp)){
x=paste('\\begin{lstlisting}[style=Rstyle, caption=', options$source.cap,',label=',options$source.lp,']\n', x, '\\end{lstlisting}\n',sep="")
}else{
x=paste('\\begin{lstlisting}[style=Rstyle, caption=', options$source.cap,']\n', x, '\\end{lstlisting}\n',sep="")}
}else{
x=paste('\\begin{lstlisting}[style=Rstyle]\n', x, '\\end{lstlisting}\n',sep="")}
if (options$split) {
name = fig_path('.tex', options, NULL)
if (!file.exists(dirname(name)))
dir.create(dirname(name))
cat(x, file = name)
sprintf('\\input{%s}', name)
} else x
options
summary(options)
output_asis(x,options)
x='3k4'
x=='3k4'
library(knitr)
opts_chunk$set(cache=TRUE, autodep=TRUE,fig.width=8, fig.height=6,fig.path='figures/theme-', cache.path='cache/theme-',out.width='\\textwidth', split=TRUE)
render_listings()
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(extrafont)
library(xtable)
loadfonts()
#theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
#theme_set(theme_bw())
theme = theme_set(theme_minimal(base_family='Helvetica Neue', base_size='11'))
theme = theme_update(legend.position="top", legend.title=element_blank(), panel.grid.major.x=element_blank(), legend.background=element_rect(fill="#f5f5f5"))
library('dplyr')
csv_file="../Algorithm_analysis/Datamaous.csv"
tf<-read.csv(csv_file)
tf<-tf %>% mutate(algorithm=paste(alg,algprop,sep="_"))
source('../Algorithm_analysis/R/find_best.R')#load the functions inside find_best.R
setwd('C:/lucmiaz/kg_dev_branch/kg/R_analysis/PARTS')
library('dplyr')
csv_file="../Algorithm_analysis/Datamaous.csv"
tf<-read.csv(csv_file)
tf<-tf %>% mutate(algorithm=paste(alg,algprop,sep="_"))
source('../Algorithm_analysis/R/find_best.R')#load the functions inside find_best.R
bestfull<-find_best(tf, qualities=c(3,2))
bestfull<-bestfull %>% mutate(algorithm=paste(alg,algprop,sep="_"))
best<-select(bestfull, one_of(c('TPR','FPR','totP','totF','thd','dist_ax','algorithm','dif')))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
library(knitr)
opts_chunk$set(cache=TRUE, autodep=TRUE,fig.width=8, fig.height=6,fig.path='figures/theme-', cache.path='cache/theme-',out.width='\\textwidth', split=TRUE)
render_listings()
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(extrafont)
library(xtable)
loadfonts()
#theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
#theme_set(theme_bw())
theme_set(theme_minimal(base_family='Helvetica Neue', base_size='11'))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")
rocplot
theme_set(theme_bw())
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
theme_set(theme_minimal(base_size='11'))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
theme_set(theme_minimal(base_family='Helvetica Neue', base_size=11))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
theme_set(theme_minimal(base_family='Helvetica Neue bold', base_size=11))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
theme_set(theme_minimal(base_family='Helvetica Neue', base_size=11))
library(RNeo4j)#call RNeo4j package
graph=startGraph('http://localhost:7474/db/data', username='neo4j', password='admin')#opens a port to the db, with username 'neo4j' and password 'admin'
#to access the database click this link : 'http://neo4j:admin@localhost:7474/db/data'
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info on the train (t) of this Passing (b) (lenght and track)
RETURN a.Name, b.Name, b.Measurement, c.tNoisemasked, c.tNoise, c.tEval, c.tEvalmasked, t.Name, r.trainLength
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
View(q)
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info on the train (t) of this Passing (b) (lenght and track)
RETURN a.Name, b.Name, b.Measurement, c.tNoisemasked, c.tNoise, c.tEval, c.tEvalmasked, t.Name, r.TrainLength
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
View(q)
forplot<-read.csv('../Algorithm_analysis/WallofFame/forplot.csv',sep=';')#contains the same info as Datamaous2, but in an other format
View(forplot)
forplot<-read.csv('../Algorithm_analysis/WallofFame/forplot.csv',sep=';')#contains the same info as Datamaous2, but in an other format
forplot<- forplot %>% arrange(dist_ax_all)
barplot<- forplot %>% filter(author!='all') %>% ggplot(aes(x=algprop))
barplot <- barplot + geom_bar(aes(weight=dist_ax/length(unique(author)), fill=author))+
coord_flip()+
xlab('Average efficiency')+
ylab('Algorithm')+
scale_fill_brewer(type='qual',palette=8)#colorscale
barplot
forplot<-read.csv('../Algorithm_analysis/WallofFame/forplot.csv',sep=';')#contains the same info as Datamaous2, but in an other format
forplot<- forplot %>% arrange(dist_ax_avg)
barplot<- forplot %>% filter(author!='all') %>% ggplot(aes(x=algprop))
barplot <- barplot + geom_bar(aes(weight=dist_ax/length(unique(author)), fill=author))+
coord_flip()+
xlab('Average efficiency')+
ylab('Algorithm')+
scale_fill_brewer(type='qual',palette=8)#colorscale
barplot
forplot<-read.csv('../Algorithm_analysis/WallofFame/forplot.csv',sep=';')#contains the same info as Datamaous2, but in an other format
barplot<- forplot %>% filter(author!='all')%>% arrange(dist_ax_avg) %>% ggplot(aes(x=algprop))
barplot <- barplot + geom_bar(aes(weight=dist_ax/length(unique(author)), fill=author))+
coord_flip()+
xlab('Average efficiency')+
ylab('Algorithm')+
scale_fill_brewer(type='qual',palette=8)#colorscale
barplot
library(RNeo4j)#call RNeo4j package
graph=startGraph('http://localhost:7474/db/data', username='neo4j', password='admin')#opens a port to the db, with username 'neo4j' and password 'admin'
#to access the database click this link : 'http://neo4j:admin@localhost:7474/db/data'
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info on the train (t) of this Passing (b) (lenght and track)
RETURN a.Name, b.Name, b.Measurement, c.tNoisemasked_p, c.tNoisemasked, c.tNoise, c.tEval, c.tEvalmasked, c.tEvalmasked_p , t.Name, r.TrainLength,
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info on the train (t) of this Passing (b) (lenght and track)
RETURN a.Name, b.Name, b.Measurement, c.tNoisemasked_p, c.tNoisemasked, c.tNoise, c.tEval, c.tEvalmasked, c.tEvalmasked_p , t.Name, r.TrainLength
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
theme_set(theme_minimal(base_family='Helvetica Neue', base_size=11))
theme_update(axis.title.y=element_text(vjust=0.1), axis.title.x=element_text(vjust=0.1))
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
coord_fixed(ratio = 1)+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
theme_set(theme_minimal(base_family='Helvetica Neue', base_size=11))
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
coord_fixed(ratio = 1)+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed()+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = 0.5)+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0,3))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0,3,1))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.60,0.75,0.05))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.05))+
scale_x_continuous(breaks = seq(0.,1.,0.05))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
Datamaous2<-read.csv('../Algorithm_analysis/WallofFame/Datamaous_2.csv')
Datamaous2<-mutate(Datamaous2, algorithm=paste(alg,algprop, sep='_'))
Datamaous2<- Datamaous2 %>% arrange(algorithm)
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algorithm, title="Algorithms - datamaous"))+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.025))+
scale_x_continuous(breaks = seq(0.,1.,0.025))+
scale_colour_manual(values=c('#fd8d3c', '#f16913', '#a63603', '#bcbddc', '#807dba', '#4a1486', '#9ecae1', '#4292c6', '#084594', '#d9d9d9', '#969696', '#525252', '#74c476', '#238b45','#00441b'), name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algorithm,label=Datamaous2$algorithm), alpha=0.75,size=4)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplotdatamaous
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.5))+
scale_x_continuous(breaks = seq(0.,1.,0.5))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.05))+
scale_x_continuous(breaks = seq(0.,1.,0.05))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.1))+
scale_x_continuous(breaks = seq(0.,1.,0.1))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.2))+
scale_x_continuous(breaks = seq(0.,1.,0.2))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0.1, y = 0.1, xend = 0.8, yend = 0.8), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.2))+
scale_x_continuous(breaks = seq(0.,1.,0.2))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0.1, y = 0.1, xend = 0.8, yend = 0.8), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.1))+
scale_x_continuous(breaks = seq(0.,1.,0.1))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algorithm, title="Algorithms - all authors"))+  geom_segment(aes(x =0.1, y = 0.1, xend = 0.8, yend = 0.8), colour="#a5a5a5")+
scale_colour_manual(values=c('#fd8d3c','#f16913','#a63603','#bcbddc','#807dba','#4a1486','#9ecae1','#4292c6','#084594','#d9d9d9','#969696','#525252','#74c476','#238b45','#00441b'),name="Algorithms")+
coord_fixed(ratio = 1)+
scale_y_continuous(breaks = seq(0.,1.,0.2))+
scale_x_continuous(breaks = seq(0.,1.,0.2))+
scale_shape_manual(values=rep(c(15,16,17),times=6),name="Algorithms")+
geom_point(aes(shape=best$algorithm,label=best$algorithm),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
rocplot
source('~/.active-rstudio-document', echo=TRUE)
bestfortable<-best
colnames(bestfortable)<-c('','TPR','FPR', 'Tot. Positives', 'Tot. Negatives', 'thd', 'dist_ax', 'Algorithm', '$\\delta$')
tab <- xtable(bestfortable, digits=c(0,3,3,0,0,3,3,0,2))
print(tab,include.rownames = FALSE, include.colnames=FALSE)
delete(bestfortable)
tab <- xtable(best, digits=c(0,3,3,0,0,3,3,0,2))
print(tab,include.rownames = FALSE, include.colnames=FALSE, only.contents = TRUE)
delete(bestfortable)
submaous<-select(Datamaous2, dist_ax, esr_dist_ax, luc_dist_ax, PHF_dist_ax, PhC_dist_ax, algorithm, thd)
submaous<-mutate(submaous, dist_tot=(dist_ax+esr_dist_ax+luc_dist_ax+PHF_dist_ax+PhC_dist_ax)/5)
colnames(submaous)<- c('','dist_ax','esr','luc','PHF','PhC','Algorithm','thd')
View(submaous)
View(Datamaous2)
tabsubmaous <- xtable(submaous, digits=c(2))
print(tabsubmaous,include.rownames = FALSE, include.colnames=FALSE, only.contents = TRUE)
tabqEval <- xtable(q %>% summary(c.tEval), digits=c(3))
print(tabqEval,include.rownames = FALSE, include.colnames=FALSE, only.contents = TRUE)
summary(c.tEval)
library(RNeo4j)#call RNeo4j package
graph=startGraph('http://localhost:7474/db/data', username='neo4j', password='admin')#opens a port to the db, with username 'neo4j' and password 'admin'
#to access the database click this link : 'http://neo4j:admin@localhost:7474/db/data'
query='
MATCH (a:Algorithm)
MATCH (b)<-[s:ISANEVALOF]-(c)-[:WASEVALWITH]->(a)//the relationship s contains the specific lengths of time (masked and not) of the microphone signal (c)
MATCH (t)<-[r:SAW]-(b)//the relationship r contains info on the train (t) of this Passing (b) (lenght and track)
RETURN a.Name, b.Name, b.Measurement, c.tNoisemasked_p, c.tNoisemasked, c.tNoise, c.tEval, c.tEvalmasked, c.tEvalmasked_p , t.Name, r.TrainLength
'
q<-cypher(graph,query)#takes the info of each MicMes for one algorithm
q<- q %>% arrange(a.Name)
tabqEval <- xtable(q %>% summary(c.tEval), digits=c(3),caption='Summary of the evaluated time.', label='tab:Eval')
print(tabqEval,type="latex")
summary(c.tEval)
summary(q$c.tEval)
q %>% summary(c.tEval)
a <- summary(q$c.tEval)
a[1]
View(a)
a$Min
a[1][1]
a[[1]][1]
a[[1]]
a
View(submaous)
View(Datamaous2)
